{"version":3,"sources":["config.js","model/actions.js","model/reducers.js","model/store.js","Header/HeaderLink.js","Header/Header.js","PageContent/PageContent.js","Gallery/Gallery.js","Image/ImagePage.js","Image/Upload.js","Home.js","serviceWorker.js","index.js","App.js"],"names":["config","backendUrl","SET_IMAGES","SET_PAGES","SET_TAG_SUGGESTIONS","ADD_IMAGE","IMAGE_UPLOADING","initialState","images","pages","tagSuggestions","isImageUploading","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","data","toConsumableArray","concat","applyMiddleware","thunk","HeaderLink","_ref","icon","exact","title","link","Icon","FiIcons","react_default","a","createElement","className","react_router_dom","to","defaultProps","connect","index_esm","src_Header_HeaderLink","map","page","key","slug","PageContent","dangerouslySetInnerHTML","__html","content","Gallery","props","_this","classCallCheck","this","dispatchFetchImages","possibleConstructorReturn","getPrototypeOf","call","_this$props","placeholder","onChange","e","target","value","Gallery_default","margin","enableImageSelection","showImageCount","Component","mapDispatchToProps","search","dispatch","url","CONF","fetch","then","json","ImagePage","description","image","sidebar","Upload","imageTitle","imageDescription","imageUrl","imageFile","tags","fileInput","fileReader","FileReader","addEventListener","setState","result","prevProps","history","push","preventDefault","formats","dataTransfer","items","i","includes","getAsFile","loadImage","readAsDataURL","dispatchAddImage","_this$state","caption","src","_this2","_this$state2","_this$props2","dispatchFetchTags","img","alt","ReactTags_default","allowNew","suggestions","handleAddition","tag","handleInputChange","input","handleDelete","newTags","splice","disabled","onClick","submitData","Fragment","files","ref","style","display","onDragOver","onDrop","click","onKeyPress","which","role","tabIndex","src_Image_ImagePage","body","formData","objectToFormData","method","Home","dispatchFetchPages","src_Header_Header","react_router","path","component","render","src_PageContent_PageContent","Boolean","window","location","hostname","match","ReactDOM","es","src_Home_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4648bbff.chunk.js","sourcesContent":["let backendUrl = 'http://localhost:8000';\n\nswitch (process.env.REACT_APP_ENV) {\n  case 'local': {\n    backendUrl = 'http://localhost:8000';\n    break;\n  }\n  case 'prod': {\n    backendUrl = '//backend.climage.mariohaertwig.de';\n    break;\n  }\n  case 'stag': {\n    break;\n  }\n  case 'dev':\n  default: {\n    break;\n  }\n}\n\nexport default {\n  backendUrl,\n};\n","import objectToFormData from 'object-to-formdata';\nimport CONF from '../config';\n\nexport const SET_IMAGES = 'SET_IMAGES';\nexport const SET_PAGES = 'SET_PAGES';\nexport const SET_TAG_SUGGESTIONS = 'SET_TAG_SUGGESTIONS';\nexport const ADD_IMAGE = 'ADD_IMAGE';\nexport const IMAGE_UPLOADING = 'IMAGE_UPLOADING';\n\nexport const fetchImages = search => dispatch => {\n  let url = `${CONF.backendUrl}/core/image/`;\n  url += search ? `?search=${search}` : '';\n\n  fetch(url)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_IMAGES, data });\n    });\n};\n\nexport const fetchPages = () => dispatch => {\n  fetch(`${CONF.backendUrl}/core/page/`)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_PAGES, data });\n    });\n};\n\nexport const fetchTags = search => dispatch => {\n  let url = `${CONF.backendUrl}/core/tag/`;\n  url += search ? `?search=${search}` : '';\n\n  fetch(url)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_TAG_SUGGESTIONS, data });\n    });\n};\n\nexport const addImage = body => dispatch => {\n  const formData = objectToFormData(body);\n  dispatch({ type: IMAGE_UPLOADING, data: true });\n  fetch(`${CONF.backendUrl}/core/image/`, {\n    method: 'POST',\n    body: formData,\n  })\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: ADD_IMAGE, data });\n      dispatch({ type: IMAGE_UPLOADING, data: false });\n    });\n};\n","import {\n  ADD_IMAGE,\n  SET_IMAGES,\n  SET_PAGES,\n  SET_TAG_SUGGESTIONS,\n  IMAGE_UPLOADING,\n} from './actions';\n\nconst initialState = {\n  images: [],\n  pages: [],\n  tagSuggestions: [],\n  isImageUploading: false,\n};\n\nexport default function climageApp(state = initialState, action) {\n  switch (action.type) {\n    case IMAGE_UPLOADING:\n      return {\n        ...state,\n        isImageUploading: action.data,\n      };\n    case SET_IMAGES:\n      return {\n        ...state,\n        images: [...action.data],\n      };\n    case SET_PAGES:\n      return {\n        ...state,\n        pages: [...action.data],\n      };\n    case SET_TAG_SUGGESTIONS:\n      return {\n        ...state,\n        tagSuggestions: [...action.data],\n      };\n    case ADD_IMAGE:\n      return {\n        ...state,\n        images: [...state.images, action.data],\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as FiIcons from 'react-icons/fi';\n\nimport './HeaderLink.scss';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  icon: PropTypes.string,\n  exact: PropTypes.bool,\n};\n\nconst defaultProps = {\n  icon: null,\n  link: null,\n  exact: false,\n};\n\nconst HeaderLink = ({ icon, exact, title, link }) => {\n  const Icon = FiIcons[icon];\n  return (\n    <div className=\"HeaderLink\">\n      <NavLink exact={exact} to={link ? `/${link}` : '/'}>\n        <Icon title={title} />\n      </NavLink>\n    </div>\n  );\n};\n\nHeaderLink.propTypes = propTypes;\nHeaderLink.defaultProps = defaultProps;\n\nexport default HeaderLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport HeaderLink from './HeaderLink';\nimport './Header.scss';\n\nconst propTypes = {\n  isImageUploading: PropTypes.bool.isRequired,\n  pages: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nconst Header = ({ pages, isImageUploading }) => (\n  <div className=\"Header\">\n    <div className=\"inner\">\n      <div className=\"header-title\">\n        <NavLink to=\"/\">\n          <h1>Climage</h1>\n          {isImageUploading ? <FaSpinner className=\"icon-spin\" /> : null}\n        </NavLink>\n      </div>\n      <div className=\"links\">\n        <HeaderLink title=\"Gallery\" icon=\"FiImage\" exact />\n        <HeaderLink title=\"Upload\" link=\"upload\" icon=\"FiUploadCloud\" />\n        {pages.map(page => (\n          <HeaderLink\n            key={page.slug}\n            title={page.title}\n            icon={page.icon}\n            link={page.slug}\n          />\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nHeader.propTypes = propTypes;\n\nconst mapStateToProps = state => ({\n  isImageUploading: state.isImageUploading,\n  pages: state.pages,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PageContent.scss';\n\nconst propTypes = {\n  page: PropTypes.shape({\n    title: PropTypes.stirng,\n    content: PropTypes.string,\n  }).isRequired,\n};\n\n// eslint-disable no-danger\nconst PageContent = ({ page }) => (\n  <div className=\"PageContent\">\n    <div className=\"page-title\">{page.title}</div>\n    <div dangerouslySetInnerHTML={{ __html: page.content }} />\n  </div>\n);\n\nPageContent.propTypes = propTypes;\nexport default PageContent;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GridGallery from 'react-grid-gallery';\nimport PropTypes from 'prop-types';\nimport { fetchImages } from '../model/actions';\n\nimport './Gallery.scss';\n\nconst propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  dispatchFetchImages: PropTypes.func.isRequired,\n};\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n    const { dispatchFetchImages } = this.props;\n    dispatchFetchImages();\n  }\n\n  render() {\n    const { images, dispatchFetchImages } = this.props;\n    return (\n      <div className=\"Gallery\">\n        <input\n          className=\"image-search\"\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={e => {\n            if (!e.target.value || e.target.value.length > 2) {\n              dispatchFetchImages(e.target.value);\n            }\n          }}\n        />\n        <GridGallery\n          margin={5}\n          images={images}\n          enableImageSelection={false}\n          showImageCount={false}\n        />\n      </div>\n    );\n  }\n}\n\nGallery.propTypes = propTypes;\n\nconst mapStateToProps = state => ({\n  images: state.images,\n});\n\nconst mapDispatchToProps = {\n  dispatchFetchImages: fetchImages,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Gallery);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ImagePage.scss';\n\nconst propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  image: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  sidebar: PropTypes.element,\n};\n\nconst defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  sidebar: null,\n};\n\nconst ImagePage = ({ title, description, image, sidebar }) => (\n  <div className=\"ImagePage\">\n    <div className=\"content\">\n      <div className=\"field\">{title}</div>\n      <div className=\"image\">{image}</div>\n      <div className=\"field\">{description}</div>\n    </div>\n    <div className=\"sidebar\">{sidebar}</div>\n  </div>\n);\n\nImagePage.propTypes = propTypes;\nImagePage.defaultProps = defaultProps;\n\nexport default ImagePage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaImage, FaCheck } from 'react-icons/fa';\nimport ReactTags from 'react-tag-autocomplete';\nimport ImagePage from './ImagePage';\nimport { addImage, fetchTags } from '../model/actions';\nimport './Upload.scss';\n\nconst propTypes = {\n  tagSuggestions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isImageUploading: PropTypes.bool.isRequired,\n  history: PropTypes.shape().isRequired,\n  dispatchAddImage: PropTypes.func.isRequired,\n  dispatchFetchTags: PropTypes.func.isRequired,\n};\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageTitle: '',\n      imageDescription: '',\n      imageUrl: null,\n      imageFile: null,\n      tags: [],\n    };\n\n    this.fileInput = null;\n    this.fileReader = new FileReader();\n    this.fileReader.addEventListener('load', () => {\n      this.setState({\n        imageUrl: this.fileReader.result,\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isImageUploading, history } = this.props;\n    if (!isImageUploading && prevProps.isImageUploading) {\n      history.push('/');\n    }\n  }\n\n  onDrop(e) {\n    e.preventDefault();\n    const formats = ['image/png', 'image/jpeg'];\n\n    if (e.dataTransfer.items) {\n      for (let i = 0; i < e.dataTransfer.items.length; i += 1) {\n        if (formats.includes(e.dataTransfer.items[i].type)) {\n          const imageFile = e.dataTransfer.items[i].getAsFile();\n          this.loadImage(imageFile);\n        }\n      }\n    }\n  }\n\n  loadImage(imageFile) {\n    this.fileReader.readAsDataURL(imageFile);\n    this.setState({ imageFile });\n  }\n\n  submitData() {\n    const { dispatchAddImage } = this.props;\n    const { tags, imageTitle, imageDescription, imageFile } = this.state;\n\n    dispatchAddImage({\n      tags,\n      caption: imageTitle,\n      description: imageDescription,\n      src: imageFile,\n    });\n  }\n\n  render() {\n    const { imageUrl, imageTitle, imageDescription, tags } = this.state;\n    const { tagSuggestions, dispatchFetchTags } = this.props;\n    let img = <FaImage className=\"icon\" />;\n\n    if (imageUrl) {\n      img = <img className=\"image\" src={imageUrl} alt=\"Preview\" />;\n    }\n\n    const title = (\n      <input\n        className=\"input-field image-title\"\n        placeholder=\"Enter title\"\n        value={imageTitle}\n        onChange={e => this.setState({ imageTitle: e.target.value })}\n      />\n    );\n\n    const description = (\n      <textarea\n        className=\"input-field image-description\"\n        placeholder=\"Add description\"\n        value={imageDescription}\n        onChange={e => this.setState({ imageDescription: e.target.value })}\n      />\n    );\n\n    const sidebar = (\n      <div className=\"input-sidebar\">\n        <div className=\"tags\">\n          <ReactTags\n            allowNew\n            tags={tags}\n            suggestions={tagSuggestions}\n            handleAddition={tag => this.setState({ tags: [...tags, tag] })}\n            handleInputChange={input => dispatchFetchTags(input)}\n            handleDelete={i => {\n              const newTags = [...tags];\n              newTags.splice(i, 1);\n              this.setState({ tags: newTags });\n            }}\n          />\n        </div>\n\n        <button\n          className=\"submit-button\"\n          type=\"submit\"\n          disabled={!(imageUrl && imageTitle && imageDescription)}\n          onClick={() => this.submitData()}\n        >\n          <FaCheck />\n          &nbsp;Upload image\n        </button>\n      </div>\n    );\n\n    const image = (\n      <>\n        <input\n          type=\"file\"\n          onChange={e => {\n            if (e.target.files.length) {\n              this.loadImage(e.target.files[0]);\n            }\n          }}\n          ref={ref => {\n            this.fileInput = ref;\n          }}\n          style={{ display: 'none' }}\n        />\n\n        <div\n          className=\"image-upload\"\n          onDragOver={e => e.preventDefault()}\n          onDrop={e => this.onDrop(e)}\n          onClick={() => this.fileInput.click()}\n          onKeyPress={e => e.which === 13 && this.fileInput.click()}\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          {img}\n        </div>\n      </>\n    );\n\n    return (\n      <ImagePage\n        title={title}\n        image={image}\n        description={description}\n        sidebar={sidebar}\n      />\n    );\n  }\n}\n\nUpload.propTypes = propTypes;\n\nconst mapStateToProps = state => ({\n  isImageUploading: state.isImageUploading,\n  tagSuggestions: state.tagSuggestions,\n});\n\nconst mapDispatchToProps = {\n  dispatchAddImage: addImage,\n  dispatchFetchTags: fetchTags,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Upload);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { fetchPages } from './model/actions';\nimport Header from './Header/Header';\nimport PageContent from './PageContent/PageContent';\nimport Gallery from './Gallery/Gallery';\nimport Upload from './Image/Upload';\nimport './Home.scss';\n\nconst propTypes = {\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      icon: PropTypes.string,\n      title: PropTypes.stirng,\n      slug: PropTypes.string,\n      content: PropTypes.string,\n    }),\n  ),\n  dispatchFetchPages: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  pages: [],\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    const { dispatchFetchPages } = this.props;\n    dispatchFetchPages();\n  }\n\n  render() {\n    const { pages } = this.props;\n    return (\n      <div className=\"Home\">\n        <Router>\n          <Header />\n          <div className=\"body\">\n            <Route exact path=\"/\" component={Gallery} />\n            <Route exact path=\"/upload/\" component={Upload} />\n            {pages.map(page => (\n              <Route\n                path={`/${page.slug}/`}\n                render={() => <PageContent page={page} />}\n              />\n            ))}\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = propTypes;\nHome.defaultProps = defaultProps;\n\nconst mapStateToProps = state => ({\n  pages: state.pages,\n});\n\nconst mapDispatchToProps = {\n  dispatchFetchPages: fetchPages,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './model/store';\nimport Home from './Home';\nimport './App.scss';\n\nexport default () => (\n  <div className=\"App\">\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  </div>\n);\n"],"sourceRoot":""}