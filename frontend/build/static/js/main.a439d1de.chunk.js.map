{"version":3,"sources":["config.js","model/actions.js","model/reducers.js","model/store.js","Header/HeaderLink.js","Header/Header.js","PageContent/PageContent.js","Gallery/Gallery.js","Image/ImagePage.js","Image/Upload.js","Image/Preview.js","Home.js","serviceWorker.js","index.js","App.js"],"names":["config","backendUrl","SET_IMAGES","SET_IMAGE","SET_PAGES","SET_TAG_SUGGESTIONS","ADD_IMAGE","IMAGE_UPLOADING","initialState","images","pages","tagSuggestions","isImageUploading","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","data","toConsumableArray","image","concat","applyMiddleware","thunk","HeaderLink","_ref","icon","exact","title","link","Icon","FiIcons","react_default","a","createElement","className","react_router_dom","to","defaultProps","connect","index_esm","src_Header_HeaderLink","map","page","key","slug","PageContent","dangerouslySetInnerHTML","__html","content","Gallery","props","_this","classCallCheck","this","dispatchFetchImages","possibleConstructorReturn","getPrototypeOf","call","_this$props","history","placeholder","onChange","e","target","value","Gallery_default","margin","enableImageSelection","showImageCount","onClickThumbnail","ix","push","Component","mapDispatchToProps","search","dispatch","url","CONF","fetch","then","json","ImagePage","description","sidebar","Upload","imageTitle","imageDescription","imageUrl","imageFile","tags","showError","fileInput","fileReader","FileReader","addEventListener","setState","result","prevProps","preventDefault","formats","dataTransfer","items","i","includes","getAsFile","loadImage","readAsDataURL","dispatchAddImage","_this$state","JSON","stringify","caption","src","_this2","_this$state2","_this$props2","dispatchFetchTags","img","alt","error","Fragment","ReactTags_default","autofocus","allowNew","suggestions","handleAddition","tag","handleInputChange","input","handleDelete","newTags","splice","onClick","submitData","files","ref","style","display","onDragOver","onDrop","click","onKeyPress","which","role","tabIndex","src_Image_ImagePage","body","formData","objectToFormData","method","Preview","prev","next","dispatchFetchImage","document","onDocumentKeyDown","bind","assertThisInitialized","updateSiblingImages","dispatchSetImage","removeEventListener","_this$props3","currentImage","find","currentIx","indexOf","imageElement","thumbnail_medium","t","name","Home","dispatchFetchPages","src_Header_Header","react_router","path","render","src_Gallery_Gallery","_ref2","match","src_Image_Preview","params","component","src_PageContent_PageContent","Boolean","window","location","hostname","ReactDOM","es","src_Home_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a439d1de.chunk.js","sourcesContent":["let backendUrl = 'http://localhost:8000';\n\nswitch (process.env.REACT_APP_ENV) {\n  case 'local': {\n    backendUrl = 'http://localhost:8000';\n    break;\n  }\n  case 'prod': {\n    backendUrl = '//backend.climage.mariohaertwig.de';\n    break;\n  }\n  case 'stag': {\n    break;\n  }\n  case 'dev':\n  default: {\n    break;\n  }\n}\n\nexport default {\n  backendUrl,\n};\n","import objectToFormData from 'object-to-formdata';\nimport CONF from '../config';\n\nexport const SET_IMAGES = 'SET_IMAGES';\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const SET_PAGES = 'SET_PAGES';\nexport const SET_TAG_SUGGESTIONS = 'SET_TAG_SUGGESTIONS';\nexport const ADD_IMAGE = 'ADD_IMAGE';\nexport const IMAGE_UPLOADING = 'IMAGE_UPLOADING';\n\nexport const fetchImages = search => dispatch => {\n  let url = `${CONF.backendUrl}/core/image/`;\n  url += search ? `?search=${search}` : '';\n\n  fetch(url)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_IMAGES, data });\n    });\n};\n\nexport const fetchImage = slug => dispatch => {\n  const url = `${CONF.backendUrl}/core/image/${slug}`;\n\n  fetch(url)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_IMAGE, data });\n    });\n};\n\nexport const setImage = data => dispatch => {\n  dispatch({ type: SET_IMAGE, data });\n};\n\nexport const fetchPages = () => dispatch => {\n  fetch(`${CONF.backendUrl}/core/page/`)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_PAGES, data });\n    });\n};\n\nexport const fetchTags = search => dispatch => {\n  let url = `${CONF.backendUrl}/core/tag/`;\n  url += search ? `?search=${search}` : '';\n\n  fetch(url)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: SET_TAG_SUGGESTIONS, data });\n    });\n};\n\nexport const addImage = body => dispatch => {\n  const formData = objectToFormData(body);\n  dispatch({ type: IMAGE_UPLOADING, data: true });\n  fetch(`${CONF.backendUrl}/core/image/`, {\n    method: 'POST',\n    body: formData,\n  })\n    .then(data => data.json())\n    .then(data => {\n      dispatch({ type: ADD_IMAGE, data });\n      dispatch({ type: IMAGE_UPLOADING, data: false });\n    });\n};\n","import {\n  ADD_IMAGE,\n  SET_IMAGES,\n  SET_IMAGE,\n  SET_PAGES,\n  SET_TAG_SUGGESTIONS,\n  IMAGE_UPLOADING,\n} from './actions';\n\nconst initialState = {\n  images: [],\n  pages: [],\n  tagSuggestions: [],\n  isImageUploading: false,\n};\n\nexport default function climageApp(state = initialState, action) {\n  switch (action.type) {\n    case IMAGE_UPLOADING:\n      return {\n        ...state,\n        isImageUploading: action.data,\n      };\n    case SET_IMAGES:\n      return {\n        ...state,\n        images: [...action.data],\n      };\n    case SET_IMAGE:\n      return {\n        ...state,\n        image: { ...action.data },\n      };\n    case SET_PAGES:\n      return {\n        ...state,\n        pages: [...action.data],\n      };\n    case SET_TAG_SUGGESTIONS:\n      return {\n        ...state,\n        tagSuggestions: [...action.data],\n      };\n    case ADD_IMAGE:\n      return {\n        ...state,\n        images: [...state.images, action.data],\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as FiIcons from 'react-icons/fi';\n\nimport './HeaderLink.scss';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  icon: PropTypes.string,\n  exact: PropTypes.bool,\n};\n\nconst defaultProps = {\n  icon: null,\n  link: null,\n  exact: false,\n};\n\nconst HeaderLink = ({ icon, exact, title, link }) => {\n  const Icon = FiIcons[icon];\n  return (\n    <div className=\"HeaderLink\">\n      <NavLink exact={exact} to={link ? `/${link}` : '/'}>\n        <Icon title={title} />\n      </NavLink>\n    </div>\n  );\n};\n\nHeaderLink.propTypes = propTypes;\nHeaderLink.defaultProps = defaultProps;\n\nexport default HeaderLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport HeaderLink from './HeaderLink';\nimport './Header.scss';\n\nconst propTypes = {\n  isImageUploading: PropTypes.bool.isRequired,\n  pages: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nconst Header = ({ pages, isImageUploading }) => (\n  <div className=\"Header\">\n    <div className=\"inner\">\n      <div className=\"header-title\">\n        <NavLink to=\"/\">\n          <h1>Climage</h1>\n          {isImageUploading ? <FaSpinner className=\"icon-spin\" /> : null}\n        </NavLink>\n      </div>\n      <div className=\"links\">\n        <HeaderLink title=\"Gallery\" icon=\"FiImage\" exact />\n        <HeaderLink title=\"Upload\" link=\"upload\" icon=\"FiUploadCloud\" />\n        {pages.map(page => (\n          <HeaderLink\n            key={page.slug}\n            title={page.title}\n            icon={page.icon}\n            link={page.slug}\n          />\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nHeader.propTypes = propTypes;\n\nconst mapStateToProps = state => ({\n  isImageUploading: state.isImageUploading,\n  pages: state.pages,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PageContent.scss';\n\nconst propTypes = {\n  page: PropTypes.shape({\n    title: PropTypes.stirng,\n    content: PropTypes.string,\n  }).isRequired,\n};\n\n// eslint-disable no-danger\nconst PageContent = ({ page }) => (\n  <div className=\"PageContent\">\n    <div className=\"page-title\">{page.title}</div>\n    <div dangerouslySetInnerHTML={{ __html: page.content }} />\n  </div>\n);\n\nPageContent.propTypes = propTypes;\nexport default PageContent;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GridGallery from 'react-grid-gallery';\nimport PropTypes from 'prop-types';\nimport { fetchImages } from '../model/actions';\n\nimport './Gallery.scss';\n\nconst propTypes = {\n  history: PropTypes.shape().isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  dispatchFetchImages: PropTypes.func.isRequired,\n};\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n    const { dispatchFetchImages } = this.props;\n    dispatchFetchImages();\n  }\n\n  render() {\n    const { images, dispatchFetchImages, history } = this.props;\n    return (\n      <div className=\"Gallery\">\n        <input\n          className=\"image-search\"\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={e => {\n            if (!e.target.value || e.target.value.length > 2) {\n              dispatchFetchImages(e.target.value);\n            }\n          }}\n        />\n        <GridGallery\n          margin={1}\n          images={images}\n          enableImageSelection={false}\n          showImageCount={false}\n          onClickThumbnail={ix => history.push(`/image/${images[ix].slug}`)}\n        />\n      </div>\n    );\n  }\n}\n\nGallery.propTypes = propTypes;\n\nconst mapStateToProps = state => ({\n  images: state.images,\n});\n\nconst mapDispatchToProps = {\n  dispatchFetchImages: fetchImages,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Gallery);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ImagePage.scss';\n\nconst propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  image: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  sidebar: PropTypes.element,\n};\n\nconst defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  sidebar: null,\n};\n\nconst ImagePage = ({ title, description, image, sidebar }) => (\n  <div className=\"ImagePage\">\n    <div className=\"content\">\n      <div className=\"field title\">{title}</div>\n      <div className=\"image\">{image}</div>\n      <div className=\"field description\">{description}</div>\n    </div>\n    <div className=\"sidebar\">{sidebar}</div>\n  </div>\n);\n\nImagePage.propTypes = propTypes;\nImagePage.defaultProps = defaultProps;\n\nexport default ImagePage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaImage, FaCheck, FaExclamationTriangle } from 'react-icons/fa';\nimport ReactTags from 'react-tag-autocomplete';\nimport ImagePage from './ImagePage';\nimport { addImage, fetchTags } from '../model/actions';\nimport './Upload.scss';\n\nconst propTypes = {\n  tagSuggestions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isImageUploading: PropTypes.bool.isRequired,\n  history: PropTypes.shape().isRequired,\n  dispatchAddImage: PropTypes.func.isRequired,\n  dispatchFetchTags: PropTypes.func.isRequired,\n};\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageTitle: '',\n      imageDescription: '',\n      imageUrl: null,\n      imageFile: null,\n      tags: [],\n      showError: false,\n    };\n\n    this.fileInput = null;\n    this.fileReader = new FileReader();\n    this.fileReader.addEventListener('load', () => {\n      this.setState({\n        imageUrl: this.fileReader.result,\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isImageUploading, history } = this.props;\n    if (!isImageUploading && prevProps.isImageUploading) {\n      history.push('/');\n    }\n  }\n\n  onDrop(e) {\n    e.preventDefault();\n    const formats = ['image/png', 'image/jpeg'];\n\n    if (e.dataTransfer.items) {\n      for (let i = 0; i < e.dataTransfer.items.length; i += 1) {\n        if (formats.includes(e.dataTransfer.items[i].type)) {\n          const imageFile = e.dataTransfer.items[i].getAsFile();\n          this.loadImage(imageFile);\n        }\n      }\n    }\n  }\n\n  loadImage(imageFile) {\n    this.fileReader.readAsDataURL(imageFile);\n    this.setState({ imageFile });\n  }\n\n  submitData() {\n    const { dispatchAddImage } = this.props;\n    const { tags, imageTitle, imageDescription, imageFile } = this.state;\n\n    if (imageTitle && imageDescription && imageFile) {\n      dispatchAddImage({\n        tags: JSON.stringify(tags),\n        caption: imageTitle,\n        description: imageDescription,\n        src: imageFile,\n      });\n    } else {\n      this.setState({ showError: true });\n    }\n  }\n\n  render() {\n    const {\n      imageUrl,\n      imageTitle,\n      imageDescription,\n      tags,\n      showError,\n    } = this.state;\n    const { tagSuggestions, dispatchFetchTags } = this.props;\n    let img = <FaImage className=\"icon\" />;\n\n    if (imageUrl) {\n      img = <img className=\"image\" src={imageUrl} alt=\"Preview\" />;\n    }\n\n    const error = (\n      <FaExclamationTriangle\n        className=\"error-triangle\"\n        title=\"This field is required\"\n      />\n    );\n\n    const title = (\n      <>\n        {showError && !imageTitle ? error : null}\n        <input\n          className=\"input-field image-title\"\n          placeholder=\"Enter title\"\n          value={imageTitle}\n          onChange={e => this.setState({ imageTitle: e.target.value })}\n        />\n      </>\n    );\n\n    const description = (\n      <>\n        {showError && !imageDescription ? error : null}\n        <textarea\n          className=\"input-field image-description\"\n          placeholder=\"Add description\"\n          value={imageDescription}\n          onChange={e => this.setState({ imageDescription: e.target.value })}\n        />\n      </>\n    );\n\n    const sidebar = (\n      <div className=\"input-sidebar\">\n        <div className=\"tags\">\n          <ReactTags\n            autofocus={false}\n            allowNew\n            tags={tags}\n            suggestions={tagSuggestions}\n            handleAddition={tag => this.setState({ tags: [...tags, tag] })}\n            handleInputChange={input => dispatchFetchTags(input)}\n            handleDelete={i => {\n              const newTags = [...tags];\n              newTags.splice(i, 1);\n              this.setState({ tags: newTags });\n            }}\n          />\n        </div>\n\n        <button\n          className=\"submit-button\"\n          type=\"submit\"\n          onClick={() => this.submitData()}\n        >\n          <FaCheck />\n          &nbsp;Upload image\n        </button>\n        <div className=\"approve-note\">\n          Note: The page admins have to approve the image\n          before it is visible in the gallery.\n        </div>\n      </div>\n    );\n\n    const image = (\n      <>\n        <input\n          type=\"file\"\n          onChange={e => {\n            if (e.target.files.length) {\n              this.loadImage(e.target.files[0]);\n            }\n          }}\n          ref={ref => {\n            this.fileInput = ref;\n          }}\n          style={{ display: 'none' }}\n        />\n\n        {showError && !imageUrl ? error : null}\n\n        <div\n          className=\"image-upload\"\n          onDragOver={e => e.preventDefault()}\n          onDrop={e => this.onDrop(e)}\n          onClick={() => this.fileInput.click()}\n          onKeyPress={e => e.which === 13 && this.fileInput.click()}\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          {img}\n        </div>\n      </>\n    );\n\n    return (\n      <ImagePage\n        title={title}\n        image={image}\n        description={description}\n        sidebar={sidebar}\n      />\n    );\n  }\n}\n\nUpload.propTypes = propTypes;\n\nconst mapStateToProps = state => ({\n  isImageUploading: state.isImageUploading,\n  tagSuggestions: state.tagSuggestions,\n});\n\nconst mapDispatchToProps = {\n  dispatchAddImage: addImage,\n  dispatchFetchTags: fetchTags,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Upload);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa';\nimport ImagePage from './ImagePage';\nimport { setImage, fetchImage } from '../model/actions';\n\nimport './Preview.scss';\n\nconst propTypes = {\n  history: PropTypes.shape().isRequired,\n  image: PropTypes.shape(),\n  images: PropTypes.arrayOf(PropTypes.shape()),\n  slug: PropTypes.string.isRequired,\n  dispatchFetchImage: PropTypes.func.isRequired,\n  dispatchSetImage: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  image: null,\n  images: [],\n};\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      prev: null,\n      next: null,\n    };\n\n    const { slug, dispatchFetchImage } = this.props;\n\n    if (slug) {\n      dispatchFetchImage(slug);\n    }\n\n    document.addEventListener('keydown', this.onDocumentKeyDown.bind(this));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { slug, dispatchFetchImage, image } = this.props;\n\n    if (prevProps.slug !== slug) {\n      dispatchFetchImage(slug);\n    }\n\n    if (prevProps.image !== image) {\n      this.updateSiblingImages();\n    }\n  }\n\n  componentWillUnmount() {\n    const { dispatchSetImage } = this.props;\n    dispatchSetImage(null);\n    document.removeEventListener('keydown', this.onDocumentKeyDown);\n  }\n\n  onDocumentKeyDown(e) {\n    const { prev, next } = this.state;\n    if (e.which === 37 && prev) {\n      this.loadImage(prev.slug);\n    } else if (e.which === 39 && next) {\n      this.loadImage(next.slug);\n    }\n  }\n\n  updateSiblingImages() {\n    const { image, images } = this.props;\n\n    if (image && images.length) {\n      const currentImage = images.find(i => i.slug === image.slug);\n\n      if (currentImage) {\n        const currentIx = images.indexOf(currentImage);\n        this.setState({\n          prev: images[currentIx - 1],\n          next: images[currentIx + 1],\n        });\n      }\n    }\n  }\n\n  loadImage(slug) {\n    const { history } = this.props;\n    history.push(`/image/${slug}`);\n  }\n\n  render() {\n    let { image } = this.props;\n    const { prev, next } = this.state;\n    image = image || {};\n\n    const imageElement = (\n      <>\n        <button\n          style={{ display: `${prev ? 'block' : 'none'}` }}\n          type=\"button\"\n          className=\"prev-image-button\"\n          onClick={() => this.loadImage(prev.slug)}\n        >\n          <FaAngleLeft />\n        </button>\n        <img alt={image.caption} src={image.thumbnail_medium} />\n        <button\n          style={{ display: `${next ? 'block' : 'none'}` }}\n          type=\"button\"\n          className=\"next-image-button\"\n          onClick={() => this.loadImage(next.slug)}\n        >\n          <FaAngleRight />\n        </button>\n      </>\n    );\n\n    const tags = (\n      <ul className=\"tags\">\n        {(image.tags || []).map(t => (\n          <li key={t.name}>{t.name}</li>\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className=\"Preview\">\n        <ImagePage\n          title={image.caption}\n          image={imageElement}\n          description={image.description}\n          sidebar={tags}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  images: state.images,\n  image: state.image,\n});\n\nconst mapDispatchToProps = {\n  dispatchSetImage: setImage,\n  dispatchFetchImage: fetchImage,\n};\n\nPreview.propTypes = propTypes;\nPreview.defaultProps = defaultProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Preview);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { fetchPages } from './model/actions';\nimport Header from './Header/Header';\nimport PageContent from './PageContent/PageContent';\nimport Gallery from './Gallery/Gallery';\nimport Upload from './Image/Upload';\nimport Preview from './Image/Preview';\nimport './Home.scss';\n\nconst propTypes = {\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      icon: PropTypes.string,\n      title: PropTypes.stirng,\n      slug: PropTypes.string,\n      content: PropTypes.string,\n    }),\n  ),\n  dispatchFetchPages: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  pages: [],\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    const { dispatchFetchPages } = this.props;\n    dispatchFetchPages();\n  }\n\n  render() {\n    const { pages } = this.props;\n    return (\n      <div className=\"Home\">\n        <Router>\n          <Header />\n          <div className=\"body\">\n            <Route\n              exact\n              path=\"/\"\n              render={({ history }) => <Gallery history={history} />}\n            />\n            <Route\n              exact\n              path=\"/image/:slug\"\n              render={({ history, match }) => (\n                <Preview slug={match.params.slug} history={history} />\n              )}\n            />\n            <Route exact path=\"/upload/\" component={Upload} />\n            {pages.map(page => (\n              <Route\n                path={`/${page.slug}/`}\n                key={page.slug}\n                render={() => <PageContent page={page} />}\n              />\n            ))}\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = propTypes;\nHome.defaultProps = defaultProps;\n\nconst mapStateToProps = state => ({\n  pages: state.pages,\n});\n\nconst mapDispatchToProps = {\n  dispatchFetchPages: fetchPages,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './model/store';\nimport Home from './Home';\nimport './App.scss';\n\nexport default () => (\n  <div className=\"App\">\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  </div>\n);\n"],"sourceRoot":""}